[net]
# Testing
# batch=1
# subdivisions=1
# Training
batch=64
subdivisions=16
width=608
height=608
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
#burn_in=1000
#burn_in=100
burn_in=30
#max_batches = 500200
max_batches = 5000
policy=steps
#steps=400000,450000
steps=4000,4500
scales=.1,.1


# --------------------- module_list[0]
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

# Downsample

# --------------------- module_list[1]
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=leaky

# --------------------- module_list[2]
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[3]
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky


# --------------------- module_list[4] == WeightedFeatureFusion
[shortcut]
from=-3
activation=linear

# Downsample
# --------------------- module_list[5] -- 104x104
[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
activation=leaky

# --------------------- module_list[6]
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[7]
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[8] == WeightedFeatureFusion
[shortcut]
from=-3
activation=linear


# --------------------- module_list[9]
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky


# --------------------- module_list[10]
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[11] == weightedFeatureFusion
[shortcut]
from=-3
activation=linear

# Downsample
# --------------------- module_list[12]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
activation=leaky

# --------------------- module_list[3]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[14]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[15]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[16]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[17]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[18]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[19]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[20]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[21] --- WeightedFeatureFusion
[shortcut]
from=-3
activation=linear

# --------------------- module_list[22]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky


# --------------------- module_list[23]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[24] ---- weightedfeaturefusion
[shortcut]
from=-3
activation=linear

# --------------------- module_list[25]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[26]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[27]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[28]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[29]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[30] -- shortcut #7
[shortcut]
from=-3
activation=linear

# --------------------- module_list[31]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[32]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[33]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[34]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[35]
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[36]
[shortcut]
from=-3
activation=linear


# Downsample
# --------------------- module_list[37] ================ DOWNSAMPLE 512
[convolutional]
batch_normalize=1
filters=512
size=3
stride=2
pad=1
activation=leaky

# --------------------- module_list[38]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[39]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[40]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[41]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[42]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[43]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[44]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[45]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[46]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[47]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky


# --------------------- module_list[48]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky


# --------------------- module_list[49]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[50]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky


# --------------------- module_list[51]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[52]
[shortcut]
from=-3
activation=linear


# --------------------- module_list[53]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[54]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky


# --------------------- module_list[55]
[shortcut]
from=-3
activation=linear


# --------------------- module_list[56]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky


# --------------------- module_list[57]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky


# --------------------- module_list[58]
[shortcut]
from=-3
activation=linear


# --------------------- module_list[59]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[60]
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[61] ====================== Picked in ROUTE later
[shortcut]
from=-3
activation=linear

# Downsample
================================== DOWNSAMPLE 1024

# --------------------- module_list[62]
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=2
pad=1
activation=leaky

# --------------------- module_list[63]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[64]
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[65]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[66]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[67]
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[68]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[69]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[70]
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[71]
[shortcut]
from=-3
activation=linear

# --------------------- module_list[72]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[73]
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

# --------------------- module_list[74]
[shortcut]
from=-3
activation=linear

######################

============================================== WHAT IS THIS SECTION!????? ==============
# --- 3 x 512/1024   ------- residual: input goes from here to yolo

# --------------------- module_list[75]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[76]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

# --------------------- module_list[77]  size 13x13
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

#---------------------------------------- SPP is spacial pyramid pooling
### SPP ###
# --------------------- module_list[78]
[maxpool]
stride=1
size=5

# --------------------- module_list[79]   ======== ROUTE to 77
[route]
layers=-2

# --------------------- module_list[80]
[maxpool]
stride=1
size=9

# --------------------- module_list[81] ====== ROUTE to 77 again
[route]
layers=-4

# --------------------- module_list[82]
[maxpool]
stride=1
size=13

# --------------------- module_list[83] ===== ROUTE TO 82, 80, 78, 77 AGAIN
[route]
#layers=-1,-3,-5,-6
layers=-1, 3

### End SPP ###
#-------------------------------------------

# --------------------- module_list[84]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[85]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

# --------------------- module_list[86]
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[87]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

# --------------------- module_list[88]
[convolutional]
size=1
stride=1
pad=1
filters=27
activation=linear


# --------------------- module_list[89]   ================= YOLO Layer
[yolo]
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=4
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


# --------------------- module_list[90] --- ROUTE TO 86 -- top line in diagram1
[route]
layers = -4

# --------------------- module_list[91]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[92]   ----- UPSAMPLE 
[upsample]
stride=2

================== layer 61 = size 512
# --------------------- module_list[93]  ------- route to 61     --- size 512
[route]
#layers = -1, 61
layers = -1, 2


# --------------------- module_list[94]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[95]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

# --------------------- module_list[96]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[97]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

# --------------------- module_list[98]
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[99]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

# --------------------- module_list[100]
[convolutional]
size=1
stride=1
pad=1
filters=27
activation=linear

# --------------------- module_list[101]
[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=4
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


# --------------------- module_list[102]  ---- ROUTE TO 98
[route]
layers = -4

# --------------------- module_list[103]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[104]
[upsample]
stride=2

# --------------------- module_list[105]   ------ 
[route]
#layers = -1, 36
layers = -1, 1


# --------------------- module_list[106]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[107]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

# --------------------- module_list[108]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[109]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

# --------------------- module_list[110]
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# --------------------- module_list[111]
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

# --------------------- module_list[112]
[convolutional]
size=1
stride=1
pad=1
filters=27
activation=linear


# --------------------- module_list[113]
[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=4
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
